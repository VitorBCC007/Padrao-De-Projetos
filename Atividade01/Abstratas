from abc import ABC, abstractmethod

class Registravel(ABC):
    @abstractmethod
    def registrar(self, aluno):
        pass
    
    @abstractmethod
    def cancelar_registro(self, aluno):
        pass
    
    @abstractmethod
    def esta_registrado(self, aluno):
        pass

class Disciplina(Registravel):
    def __init__(self):
        self.alunos_matriculados = []

    def registrar(self, aluno):
        self.alunos_matriculados.append(aluno)
        print(f"{aluno.obter_nome()} matriculado com sucesso.")

    def cancelar_registro(self, aluno):
        self.alunos_matriculados.remove(aluno)
        print(f"{aluno.obter_nome()} retirado com sucesso.")

    def esta_registrado(self, aluno):
        return aluno in self.alunos_matriculados

class Aluno:
    def __init__(self, nome):
        self.nome = nome

    def obter_nome(self):
        return self.nome

def main():
    disciplina = Disciplina()
    aluno1 = Aluno("Jo√£o")
    aluno2 = Aluno("Maria")

    disciplina.registrar(aluno1)
    disciplina.registrar(aluno2)
    disciplina.cancelar_registro(aluno1)

if __name__ == "__main__":
    main()
