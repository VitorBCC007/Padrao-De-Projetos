from abc import ABC, abstractmethod

class Aluno(ABC):
    @abstractmethod
    def obter_nome(self):
        pass

class Disciplina(ABC):
    @abstractmethod
    def matricular(self, aluno):
        pass
    
    @abstractmethod
    def listar_alunos(self):
        pass

class AlunoImpl(Aluno):
    def __init__(self, nome):
        self.nome = nome

    def obter_nome(self):
        return self.nome

class DisciplinaImpl(Disciplina):
    def __init__(self, nome_disciplina):
        self.nome_disciplina = nome_disciplina
        self.alunos = []

    def matricular(self, aluno):
        self.alunos.append(aluno)

    def listar_alunos(self):
        print(f"Alunos matriculados na disciplina de {self.nome_disciplina}:")
        for aluno in self.alunos:
            print(aluno.obter_nome())
aluno1 = AlunoImpl("João")
aluno2 = AlunoImpl("Vítão")

disciplina = DisciplinaImpl("PP")
disciplina.matricular(aluno1)
disciplina.matricular(aluno2)
disciplina.listar_alunos()
